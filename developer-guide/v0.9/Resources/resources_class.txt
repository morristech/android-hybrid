/**
 It handles and provides all resources needed by SIMINOV.
 Such As: Provides Application Descriptor, Database Descriptor, Library Descriptor,                                        Database Mapping.
 */
public final class Resources {

	/**
	 It provides an instance of Resources class.
	 */
	public static Resources getInstance();

	/**
	 Returns Application Context provided by application.
	 */
	public Context getApplicationContext();

	/**
	 Get Application Descriptor object of application.
	 */
	public ApplicationDescriptor getApplicationDescriptor();

	/**
	 Get iterator of all database descriptors provided in Application Descriptor file.
	 */
	public Iterator<String> getDatabaseDescriptorsPaths();

	/**
	 Get DatabaseDescriptor based on path provided as per defined in Application Descriptor file.
		*/

	public DatabaseDescriptor getDatabaseDescriptorBasedOnPath(final String databaseDescriptorPath);

	/**
	 Get Database Descriptor based on database descriptor name provided as per defined in Database Descriptor file.
	*/
	public DatabaseDescriptor getDatabaseDescriptorBasedOnName(final String databaseDescriptorName);

	/**
	 Get all Database Descriptors object.
	*/
	public Iterator<DatabaseDescriptor> getDatabaseDescriptors();

	/**
	 Get Database Descriptor based on POJO class name provided.
	*/
	public DatabaseDescriptor getDatabaseDescriptorBasedOnClassName(final String className);


	/**
	 Get Database Descriptor based on table name provided.
	*/
	public DatabaseDescriptor getDatabaseDescriptorBasedOnTableName(final String tableName);

	/**
	 Get Database Mapping based on POJO class name provided.
	*/
	public DatabaseMapping getDatabaseMappingBasedOnClassName(final String className);

	/**
	 Get Database Mapping based on table name provided.
	*/
	public DatabaseMapping getDatabaseMappingBasedOnTableName(final String tableName);

	/**
	 Get all Library Paths as per defined in all Database Descriptor file's.
	*/
	public Iterator<String> getLibraryPaths();
	
	/**
	 Get all library paths based on Database Descriptor name.
	*/
	public Iterator<String> getLibraryPathsBasedOnDatabaseDescriptorName(final String databaseDescriptorName);

	/**
	 Get all Library Descriptor objects as per contain in all Database Descriptor's.
	*/
	public Iterator<LibraryDescriptor> getLibraries();

	/**
	 Get all Library Descriptor objects based on Database Descriptor name.
	*/
	public Iterator<LibraryDescriptor> getLibrariesBasedOnDatabaseDescriptorName(final String databaseDescriptorName);
	
	/**
	 * Get all Library Database Mapping objects based in library descriptor path.
	*/
	public Iterator<DatabaseMapping> getLibraryDatabaseMappingsBasedOnLibraryDescriptorPath(final String libraryPath);

	/**
	 Get IDatabase object based on Database Descriptor name.
	*/
	public IDatabase getDatabaseBasedOnDatabaseDescriptorName(final String databaseName);



	/**
	 Get IDatabase object based on Database Mapping POJO class name.
	*/
	public IDatabase getDatabaseBasedOnDatabaseMappingPojoClass(final Class<?> classObject);

	/**
	 Get IDatabase based on Database Mapping POJO class name.
	*/
	public IDatabase getDatabaseBasedOnDatabaseMappingClassName(final String databaseMappingClassName);

	/**
	 Get IDatabase object based on Database Mapping table name.
	*/
	public IDatabase getDatabaseBasedOnDatabaseMappingTableName(final String databaseMappingTableName);

	/**
	 Get all IDatabase objects contain by application.
	*/
	public Iterator<IDatabase> getDatabases();

	/**
	  Get SIMINOV-EVENT Handler
	*/
	public ISiminovEvents getSiminovEventHandler();

	/**
	 Get DATABASE-EVENT Handler
	*/
	public IDatabaseEvents getDatabaseEventHandler();

}
