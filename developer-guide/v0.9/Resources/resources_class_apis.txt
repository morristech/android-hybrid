public final class Resources {

	public static Resources getInstance();

	public Context getApplicationContext();

	public ApplicationDescriptor getApplicationDescriptor();

	public Iterator<String> getDatabaseDescriptorsPaths();

	public DatabaseDescriptor getDatabaseDescriptorBasedOnPath(final String databaseDescriptorPath);

	public DatabaseDescriptor getDatabaseDescriptorBasedOnName(final String databaseDescriptorName);

	public Iterator<DatabaseDescriptor> getDatabaseDescriptors();

	public DatabaseDescriptor getDatabaseDescriptorBasedOnClassName(final String className);

	public DatabaseDescriptor getDatabaseDescriptorBasedOnTableName(final String tableName);

	public DatabaseMappingDescriptor getDatabaseMappingBasedOnClassName(final String className);

	public DatabaseMappingDescriptor requiredDatabaseMappingDescriptorBasedOnClassName(final String className) throws CoreException;

	public DatabaseMappingDescriptor getDatabaseMappingBasedOnTableName(final String tableName);

	public Iterator<String> getLibraryPaths();

	public Iterator<String> getLibraryPathsBasedOnDatabaseDescriptorName(final String databaseDescriptorName);

	public Iterator<LibraryDescriptor> getLibraries();

	public Iterator<LibraryDescriptor> getLibrariesBasedOnDatabaseDescriptorName(final String databaseDescriptorName);

	public Iterator<DatabaseMappingDescriptor> getLibraryDatabaseMappingsBasedOnLibraryDescriptorPath(final String libraryPath);

	public IDatabase getDatabaseBasedOnDatabaseDescriptorName(final String databaseName);

	public IDatabase getDatabaseBasedOnDatabaseMappingPojoClass(final Class<?> classObject);

	public IDatabase getDatabaseBasedOnDatabaseMappingClassName(final String databaseMappingClassName);

	public IDatabase getDatabaseBasedOnDatabaseMappingTableName(final String databaseMappingTableName);

	public Iterator<IDatabase> getDatabases();

	public ISiminovEvents getCoreEventHandler();

	public IDatabaseEvents getDatabaseEventHandler();

}






